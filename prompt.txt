Create OAS document for API's requirements below.
1. Implement Bearer Token Authentication: 
     a) Integrate user registration and login endpoints into BLE Beacon Presence Tracking.
     b) Secure your core API endpoints (Lists, Tasks) so they require a valid bearer token for access.      
     c) Goal: Prepare your API for secure, real-world frontend consumption.

2. Build a Comprehensive Postman/Insomnia Collection:
     a) Organize all your API requests (GET, POST, PUT, DELETE) for BLE Beacon Presence Tracking.
	 b) Postgresql Database will be used with table schemes:
		 CREATE TABLE beacons (
		  id uuid PRIMARY KEY DEFAULT gen_random_uuid(),
		  beacon_id TEXT UNIQUE NOT NULL,
		  location_name TEXT,
		  latitude DOUBLE PRECISION,
		  longitude DOUBLE PRECISION
		);
		CREATE TABLE presence_logs (
		  id uuid PRIMARY KEY DEFAULT gen_random_uuid(),
		  user_id TEXT NOT NULL,
		  beacon_id TEXT REFERENCES beacons(beacon_id),
		  timestamp TIMESTAMP DEFAULT timezone('utc', now()),
		  latitude DOUBLE PRECISION,
		  longitude DOUBLE PRECISION,
		  signal_strength INT
		);
     c) Include example requests for login/registration and every CRUD operation, showing expected data and headers (especially for auth).      
     d) Goal: Create a clear, executable blueprint for frontend developers and AI.